/*
* @Author: aaronpmishkin
* @Date:   2016-06-28 15:42:57
* @Last Modified by:   aaronpmishkin
* @Last Modified time: 2017-07-18 12:18:15
*/

import * as d3								from 'd3';

import { ValueChart }						from '../model';
import { User }								from '../model';
import { WeightMap }						from '../model';
import { ScoreFunction }					from '../model';
import { Objective }						from '../model';
import { PrimitiveObjective }				from '../model';
import { Alternative }						from '../model';


import { ViewConfig, InteractionConfig }	from './Config.types';
import { ChartOrientation }					from './Config.types';


export interface RowData {
	objective: PrimitiveObjective;
	weightOffset: number;
	cells: CellData[];
}

export interface CellData {
	alternative: Alternative;
	value: (string | number);
	userScores: UserScoreData[];
}

export interface UserScoreData {
	user: User;
	objective: PrimitiveObjective;
	value: (string | number);
	offset?: number
}

export interface LabelData {
	objective: Objective;
	weight: number;
	depth: number;
	depthOfChildren: number;
	subLabelData?: LabelData[]
}

export interface DomainElement {
	element: (string | number);
	scoreFunction: ScoreFunction;
	color: string;
}

export interface ScoreFunctionData {
	elements: DomainElement[];
	scoreFunction: ScoreFunction;
	color: string;
}

export interface ScoreFunctionDataSummary {
	element: (string | number);
	min: number;
	firstQuartile: number;
	median: number;
	thirdQuartile: number;
	max: number;
}

/*
	The update object type for the three main renderer classes: SummaryChartRenderer, ObjectiveChartRenderer and LabelRenderer. It is
	type of message sent to these renderer classes to render to trigger initial construction and rendering, and then re-rendering given changes.
*/
export interface RendererUpdate {
	el: d3.Selection<any, any, any, any>;
	valueChart: ValueChart;
	usersToDisplay: User[];
	maximumWeightMap: WeightMap;
	rowData: RowData[];
	labelData: LabelData[];
	width: number;
	height: number;
	x: number;
	y: number;
	viewConfig: ViewConfig;
	interactionConfig: InteractionConfig;
	rendererConfig: RendererConfig;
	renderRequired: { value: boolean; };
	structuralUpdate: boolean;
	reducedInformation: boolean;
}

/*
	The configuration object for the three main renderer classes: SummaryChartRenderer, ObjectiveChartRenderer and LabelRenderer. It is generated by the
	rendererConfig class.
*/
export interface RendererConfig {
	viewOrientation: ChartOrientation;
	chartComponentWidth: number;
	chartComponentHeight: number;
	dimensionOne: string;
	dimensionTwo: string;
	coordinateOne: string;
	coordinateTwo: string;
	dimensionOneSize: number;
	dimensionTwoSize: number;
	dimensionTwoScale: d3.ScaleLinear<any, any>;
}

/*
	The update object type for ScoreFunctionRenderer and its subclasses. It is type of message sent to the ScoreFunctionRenderer class 
	to render Score Function plots.
*/
export interface ScoreFunctionUpdate {
	el: d3.Selection<any, any, any, any>;
	individual: boolean;
	viewOrientation: ChartOrientation;
	interactionConfig: { adjustScoreFunctions: boolean, expandScoreFunctions: boolean };
	width: number;
	height: number;
	scoreFunctions: ScoreFunction[];
	objective: PrimitiveObjective;
	colors: string[];
	rendererConfig: ScoreFunctionConfig; 
	heightScale: d3.ScaleLinear<any, any>;
	scoreFunctionData: ScoreFunctionData[];
	styleUpdate: boolean;
}

/*
	The configuration object type for ScoreFunctionRenderer and its subclasses. It is generated by the RendererScoreFunctionUtility.
*/
export interface ScoreFunctionConfig {
	dimensionOne: string;
	dimensionTwo: string;
	coordinateOne: string;
	coordinateTwo: string;
	dimensionOneSize: number;
	dimensionTwoSize: number;
	independentAxisCoordinateTwo: number;					// The y coordinate of the x-axis in the plot
	dependentAxisCoordinateTwo: number;				// The y coordinate of the top of the y-axis
	dependentAxisCoordinateOne: number;					// The x coordinate of the y-axis in the plot.
	independentAxisCoordinateOne: number; 				// The x coordinate of the rightmost end of the x-axis.
	labelOffset: number;
}
		

